{"ast":null,"code":"import _asyncToGenerator from\"/Users/jungmyungjin/Workspace/GIT_HUB/movie_app/movie_app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/jungmyungjin/Workspace/GIT_HUB/movie_app/movie_app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/jungmyungjin/Workspace/GIT_HUB/movie_app/movie_app/node_modules/@babel/runtime/regenerator/index.js\";import{useState,useEffect}from\"react\";import Movie from\"../components/Movie\";import{jsx as _jsx}from\"react/jsx-runtime\";function Home(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),movies=_useState4[0],setMovies=_useState4[1];// verson 1 : then 사용\n//   useEffect(() => {\n//     fetch(\n//       `https://yts.mx/api/v2/list_movies.json?minimum_rating=9&sort_by=year`\n//     )\n//       .then((response) => response.json())\n//       .then((json) => setMovies(json));\n//     setLoading(false);\n//   }, []);\n// verson 2 : async 사용\n// then과 같은 기능을 하지만 then보다 보기 좋다고 한다.\n//   const getMovies = async () => {\n//     const response = await fetch(\n//       `https://yts.mx/api/v2/list_movies.json?minimum_rating=9&sort_by=year`\n//     );\n//     const json = await response.json();\n//     setMovies(json.data.movies);\n//     setLoading(false);\n//   };\n//   useEffect(() => {\n//     getMovies();\n//   }, []);\n// verson 2.1 : async의 간소화\nvar getMovies=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var json;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://yts.mx/api/v2/list_movies.json?minimum_rating=8&sort_by=year\");case 2:_context.next=4;return _context.sent.json();case 4:json=_context.sent;setMovies(json.data.movies);setLoading(false);case 7:case\"end\":return _context.stop();}}},_callee);}));return function getMovies(){return _ref.apply(this,arguments);};}();useEffect(function(){getMovies();},[]);console.log(movies);return/*#__PURE__*/_jsx(\"div\",{children:loading?/*#__PURE__*/_jsx(\"h1\",{children:\"Loading...\"}):/*#__PURE__*/_jsx(\"div\",{children:movies.map(function(movie){return/*#__PURE__*/_jsx(Movie,{id:movie.id,coverImg:movie.medium_cover_image,title:movie.title,summary:movie.summary,genres:movie.genres},movie.id);})})});}export default Home;","map":{"version":3,"sources":["/Users/jungmyungjin/Workspace/GIT_HUB/movie_app/movie_app/src/routes/Home.js"],"names":["useState","useEffect","Movie","Home","loading","setLoading","movies","setMovies","getMovies","fetch","json","data","console","log","map","movie","id","medium_cover_image","title","summary","genres"],"mappings":"gbAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,qBAAlB,C,2CAEA,QAASC,CAAAA,IAAT,EAAgB,CACd,cAA8BH,QAAQ,CAAC,IAAD,CAAtC,wCAAOI,OAAP,eAAgBC,UAAhB,eACA,eAA4BL,QAAQ,CAAC,EAAD,CAApC,yCAAOM,MAAP,eAAeC,SAAf,eAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,GAAMC,CAAAA,SAAS,0FAAG,kKAERC,CAAAA,KAAK,wEAFG,6CAKdC,IALc,UACVA,IADU,eAMhBH,SAAS,CAACG,IAAI,CAACC,IAAL,CAAUL,MAAX,CAAT,CACAD,UAAU,CAAC,KAAD,CAAV,CAPgB,sDAAH,kBAATG,CAAAA,SAAS,0CAAf,CASAP,SAAS,CAAC,UAAM,CACdO,SAAS,GACV,CAFQ,CAEN,EAFM,CAAT,CAIAI,OAAO,CAACC,GAAR,CAAYP,MAAZ,EACA,mBACE,qBACGF,OAAO,cACN,kCADM,cAGN,qBACGE,MAAM,CAACQ,GAAP,CAAW,SAACC,KAAD,qBACV,KAAC,KAAD,EAEE,EAAE,CAAEA,KAAK,CAACC,EAFZ,CAGE,QAAQ,CAAED,KAAK,CAACE,kBAHlB,CAIE,KAAK,CAAEF,KAAK,CAACG,KAJf,CAKE,OAAO,CAAEH,KAAK,CAACI,OALjB,CAME,MAAM,CAAEJ,KAAK,CAACK,MANhB,EACOL,KAAK,CAACC,EADb,CADU,EAAX,CADH,EAJJ,EADF,CAoBD,CAED,cAAeb,CAAAA,IAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Movie from \"../components/Movie\";\n\nfunction Home() {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n\n  // verson 1 : then 사용\n  //   useEffect(() => {\n  //     fetch(\n  //       `https://yts.mx/api/v2/list_movies.json?minimum_rating=9&sort_by=year`\n  //     )\n  //       .then((response) => response.json())\n  //       .then((json) => setMovies(json));\n  //     setLoading(false);\n  //   }, []);\n\n  // verson 2 : async 사용\n  // then과 같은 기능을 하지만 then보다 보기 좋다고 한다.\n  //   const getMovies = async () => {\n  //     const response = await fetch(\n  //       `https://yts.mx/api/v2/list_movies.json?minimum_rating=9&sort_by=year`\n  //     );\n  //     const json = await response.json();\n  //     setMovies(json.data.movies);\n  //     setLoading(false);\n  //   };\n  //   useEffect(() => {\n  //     getMovies();\n  //   }, []);\n\n  // verson 2.1 : async의 간소화\n  const getMovies = async () => {\n    const json = await (\n      await fetch(\n        `https://yts.mx/api/v2/list_movies.json?minimum_rating=8&sort_by=year`\n      )\n    ).json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  console.log(movies);\n  return (\n    <div>\n      {loading ? (\n        <h1>Loading...</h1>\n      ) : (\n        <div>\n          {movies.map((movie) => (\n            <Movie\n              key={movie.id}\n              id={movie.id}\n              coverImg={movie.medium_cover_image}\n              title={movie.title}\n              summary={movie.summary}\n              genres={movie.genres}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}